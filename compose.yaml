services:
  frontend:
    image: tasks-managing-frontend:latest
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    volumes:
      - ./apps/frontend/src:/fullstackTest/apps/frontend/src
      - ./apps/frontend/tsconfig.json:/fullstackTest/apps/frontend/tsconfig.json
    command: yarn start
    healthcheck:
      test: ["CMD", "curl", "-f", "http://frontend:3000/"]
      interval: 10s
      timeout: 3s
      retries: 3

  backend:
    image: tasks-managing-backend:latest
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./apps/backend/src:/fullstackTest/apps/backend/src
      - ./apps/backend/tsconfig.json:/fullstackTest/apps/backend/tsconfig.json
    command: bash -c "yarn run watch & yarn start wait"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://backend:8080/health" ]
      interval: 10s
      timeout: 3s
      retries: 3

  nginx:
    image: nginx:alpine
    depends_on:
      frontend:
        condition: service_started
      backend:
        condition: service_started
    ports:
      - "8000:8000"
    volumes:
      - ./apps/nginx/nginx.conf:/etc/nginx/conf.d/default.conf

  database:
    image: postgres:17
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5599:5432'
    volumes:
      - ./.db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}" ]
      interval: 1s
      timeout: 3s
      retries: 5
